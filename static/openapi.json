{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1.0",
    "title": "herzen"
  },
  "paths": {
    "/api/v1/login/access-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login-login_access_token",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "grant_type": "string",
                    "username": "string",
                    "password": "string",
                    "scope": "",
                    "client_id": "string",
                    "client_secret": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "access_token": "string",
                      "token_type": "bearer"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "login-test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/password-recovery/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "login-recover_password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password/": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "login-reset_password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-recovery-html-content/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password Html Content",
        "description": "HTML Content for Password Recovery",
        "operationId": "login-recover_password_html_content",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users.",
        "operationId": "users-read_users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user.",
        "operationId": "users-create_user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "{\n  \"email\": \"string\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"full_name\": \"string\",\n  \"password\": \"string\"\n}",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "email": "string",
                    "is_active": true,
                    "is_superuser": false,
                    "full_name": "string",
                    "password": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "users-read_user_me",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User Me",
        "description": "Update own user.",
        "operationId": "users-update_user_me",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/password": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "users-update_password_me",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/open": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User Open",
        "description": "Create new user without the need to be logged in.",
        "operationId": "users-create_user_open",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateOpen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User By Id",
        "description": "Get a specific user by id.",
        "operationId": "users-read_user_by_id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user.",
        "operationId": "users-update_user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user.",
        "operationId": "users-delete_user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/utils/test-email/": {
      "post": {
        "tags": [
          "utils"
        ],
        "summary": "Test Email",
        "description": "Test emails.",
        "operationId": "utils-test_email",
        "parameters": [
          {
            "name": "email_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email To",
              "format": "email"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/institutes/": {
      "get": {
        "tags": [
          "institutes"
        ],
        "summary": "Get Institutes",
        "description": "Retrieve institutes.",
        "operationId": "institutes-get_institutes",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get Groups",
        "description": "Retrieve groups by institute_id and course.",
        "operationId": "groups-get_groups",
        "parameters": [
          {
            "name": "institute_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Institute Id",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          {
            "name": "course",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Course",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/{student_id}": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Get Student",
        "operationId": "students-get_student",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "students"
        ],
        "summary": "Update Student",
        "description": "Update a student.",
        "operationId": "students-update_student",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "students"
        ],
        "summary": "Delete Student",
        "description": "Delete a student.",
        "operationId": "students-delete_student",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/students/": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Get Students",
        "description": "Retrieve students.",
        "operationId": "students-get_students",
        "parameters": [
          {
            "name": "student_name",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Student Name",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Group Id",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "students"
        ],
        "summary": "Create Student",
        "description": "Create new student.",
        "operationId": "students-create_student",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/standards/": {
      "get": {
        "tags": [
          "standards"
        ],
        "summary": "List Standards",
        "description": "Retrieve standards.",
        "operationId": "standards-list_standards",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardsOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/students/{student_id}/standards-results/": {
      "get": {
        "tags": [
          "standards-results"
        ],
        "summary": "List Standards Results",
        "description": "Retrieve standard results for a given student.",
        "operationId": "standards-results-list_standards_results",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardsResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "standards-results"
        ],
        "summary": "Create Standard Result",
        "description": "Create new standard result.",
        "operationId": "standards-results-create_standard_result",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardResultCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResultOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/students/{student_id}/standards-results/{standard_result_id}": {
      "patch": {
        "tags": [
          "standards-results"
        ],
        "summary": "Update Standard Result",
        "description": "Update a standard result.",
        "operationId": "standards-results-update_standard_result",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          },
          {
            "name": "standard_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Standard Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StandardResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResultOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "standards-results"
        ],
        "summary": "Delete Standard Result",
        "description": "Delete a standard result.",
        "operationId": "standards-results-delete_standard_result",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          },
          {
            "name": "standard_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Standard Result Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/theories/": {
      "get": {
        "tags": [
          "theories"
        ],
        "summary": "List Theories",
        "description": "Retrieve theories.",
        "operationId": "theories-list_theories",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheoriesOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/students/{student_id}/theories-results/": {
      "get": {
        "tags": [
          "theories-results"
        ],
        "summary": "List Theories Results",
        "description": "Retrieve theories results for a given student.",
        "operationId": "theories-results-list_theories_results",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheoriesResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "theories-results"
        ],
        "summary": "Create Theory Result",
        "description": "Create new theory result.",
        "operationId": "theories-results-create_theory_result",
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TheoryResultCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheoryResultOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/students/{student_id}/theories-results/{theory_result_id}": {
      "patch": {
        "tags": [
          "theories-results"
        ],
        "summary": "Update Theory Result",
        "description": "Update a theory result.",
        "operationId": "theories-results-update_theory_result",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          },
          {
            "name": "theory_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Theory Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TheoryResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheoryResultOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "theories-results"
        ],
        "summary": "Delete Theory Result",
        "description": "Delete a theory result.",
        "operationId": "theories-results-delete_theory_result",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Student Id"
            }
          },
          {
            "name": "theory_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Theory Result Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/gto": {
      "get": {
        "tags": [
          "GTO"
        ],
        "summary": "Get GTO by institute id",
        "description": "get data of GTO by institute id",
        "operationId": "get-api-v1-gto",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "institute_id",
            "in": "query",
            "description": "id of institute (0:infinity)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "student_id": {
                      "type": "integer"
                    },
                    "level": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "student_id": 0,
                      "level": "string"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "count_by_institute": {
                        "gold": 0,
                        "silver": 0,
                        "bronze": 0
                      },
                      "members_count": {
                        "gold": 0,
                        "silver": 0,
                        "bronze": 0
                      },
                      "rating": {
                        "gold": 0,
                        "silver": 0,
                        "bronze": 0
                      },
                      "percent_by_common": {
                        "gold": 0,
                        "silver": 0,
                        "bronze": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "",
            "description": ""
          }
        ]
      },
      "patch": {
        "tags": [
          "GTO"
        ],
        "summary": "PATCH GTO results",
        "operationId": "patch-api-v1-gto",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "{\n    \"student_id\": 0,\n    \"level\": \"string\"\n}",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "student_id": {
                    "type": "integer"
                  },
                  "level": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "student_id": 0,
                    "level": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "student_id": {
                      "type": "integer"
                    },
                    "level": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "student_id": 0,
                      "level": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "",
            "description": ""
          }
        ]
      },
      "post": {
        "tags": [
          "GTO"
        ],
        "summary": "POST GTO results",
        "operationId": "post-api-v1-gto",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "{\n    \"student_id\": 0,\n    \"level\": \"string\"\n}",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "student_id": {
                    "type": "integer"
                  },
                  "level": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "student_id": 0,
                    "level": "string"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "student_id": 0,
                    "level": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "student_id": {
                      "type": "integer"
                    },
                    "level": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "student_id": 0,
                      "level": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "msg": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "detail": [
                        {
                          "loc": [
                            "string",
                            0
                          ],
                          "msg": "string",
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "",
            "description": ""
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "/api/v1/login/access-token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "Body_login-login_access_token": {
        "type": "object",
        "title": "Body_login-login_access_token",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ]
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "client_secret": {
            "title": "Client Secret",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "Token": {
        "type": "object",
        "title": "Token",
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "required": [
          "access_token"
        ]
      },
      "HTTPValidationError": {
        "type": "object",
        "title": "HTTPValidationError",
        "properties": {
          "detail": {
            "type": "array",
            "title": "Detail",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "title": "ValidationError",
        "properties": {
          "loc": {
            "type": "array",
            "title": "Location",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ]
      },
      "UserOut": {
        "type": "object",
        "title": "UserOut",
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "title": "Full Name",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "email",
          "id"
        ]
      },
      "Message": {
        "type": "object",
        "title": "Message",
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "required": [
          "message"
        ]
      },
      "NewPassword": {
        "type": "object",
        "title": "NewPassword",
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "required": [
          "token",
          "new_password"
        ]
      },
      "UsersOut": {
        "type": "object",
        "title": "UsersOut",
        "properties": {
          "data": {
            "type": "array",
            "title": "Data",
            "items": {
              "$ref": "#/components/schemas/UserOut"
            }
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "data",
          "count"
        ]
      },
      "UserCreate": {
        "type": "object",
        "title": "UserCreate",
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "title": "Full Name",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserUpdateMe": {
        "type": "object",
        "title": "UserUpdateMe",
        "properties": {
          "full_name": {
            "title": "Full Name",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "title": "Email",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "UpdatePassword": {
        "type": "object",
        "title": "UpdatePassword",
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "required": [
          "current_password",
          "new_password"
        ]
      },
      "UserCreateOpen": {
        "type": "object",
        "title": "UserCreateOpen",
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "full_name": {
            "title": "Full Name",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "title": "UserUpdate",
        "properties": {
          "email": {
            "title": "Email",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "title": "Full Name",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "title": "Password",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "InstitutesOut": {
        "type": "object",
        "title": "InstitutesOut",
        "properties": {
          "data": {
            "type": "array",
            "title": "Data",
            "items": {
              "$ref": "#/components/schemas/InstituteOut"
            }
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "data",
          "count"
        ]
      },
      "InstituteOut": {
        "type": "object",
        "title": "InstituteOut",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "GroupsOut": {
        "type": "object",
        "title": "GroupsOut",
        "properties": {
          "data": {
            "type": "array",
            "title": "Data",
            "items": {
              "$ref": "#/components/schemas/GroupOut"
            }
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "data",
          "count"
        ]
      },
      "GroupOut": {
        "type": "object",
        "title": "GroupOut",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "course": {
            "type": "integer",
            "title": "Course"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "institute_id": {
            "type": "integer",
            "title": "Institute Id"
          },
          "institute": {
            "$ref": "#/components/schemas/InstituteOut"
          }
        },
        "required": [
          "name",
          "course",
          "id",
          "institute_id",
          "institute"
        ]
      },
      "StudentOut": {
        "type": "object",
        "title": "StudentOut",
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "patronymic": {
            "type": "string",
            "title": "Patronymic"
          },
          "birth_date": {
            "type": "string",
            "title": "Birth Date",
            "format": "date"
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "medical_group": {
            "$ref": "#/components/schemas/MedicalGroup"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          },
          "weight": {
            "type": "integer",
            "title": "Weight"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "admission_year": {
            "type": "integer",
            "title": "Admission Year"
          },
          "birth_place": {
            "type": "string",
            "title": "Birth Place"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "group": {
            "$ref": "#/components/schemas/GroupOut"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "patronymic",
          "birth_date",
          "sex",
          "medical_group",
          "height",
          "weight",
          "email",
          "phone_number",
          "admission_year",
          "birth_place",
          "address",
          "id",
          "group_id",
          "group"
        ]
      },
      "Sex": {
        "type": "string",
        "enum": [
          "Мужской",
          "Женский"
        ],
        "title": "Sex"
      },
      "MedicalGroup": {
        "type": "string",
        "enum": [
          "Основная",
          "Подготовительная",
          "Специальная \"А\" (оздоровительная)",
          "Специальная \"Б\" (реабилитационная)"
        ],
        "title": "MedicalGroup"
      },
      "StudentUpdate": {
        "type": "object",
        "title": "StudentUpdate",
        "properties": {
          "first_name": {
            "title": "First Name",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_name": {
            "title": "Last Name",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "patronymic": {
            "title": "Patronymic",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "birth_date": {
            "title": "Birth Date",
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ]
          },
          "sex": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Sex"
              },
              {
                "type": "null"
              }
            ]
          },
          "medical_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MedicalGroup"
              },
              {
                "type": "null"
              }
            ]
          },
          "height": {
            "title": "Height",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "weight": {
            "title": "Weight",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "title": "Email",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "phone_number": {
            "title": "Phone Number",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "admission_year": {
            "title": "Admission Year",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "birth_place": {
            "title": "Birth Place",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "address": {
            "title": "Address",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "group_id": {
            "title": "Group Id",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "StudentsOut": {
        "type": "object",
        "title": "StudentsOut",
        "properties": {
          "data": {
            "type": "array",
            "title": "Data",
            "items": {
              "$ref": "#/components/schemas/StudentOut"
            }
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "data",
          "count"
        ]
      },
      "StudentCreate": {
        "type": "object",
        "title": "StudentCreate",
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "patronymic": {
            "type": "string",
            "title": "Patronymic"
          },
          "birth_date": {
            "type": "string",
            "title": "Birth Date",
            "format": "date"
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "medical_group": {
            "$ref": "#/components/schemas/MedicalGroup"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          },
          "weight": {
            "type": "integer",
            "title": "Weight"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "admission_year": {
            "type": "integer",
            "title": "Admission Year"
          },
          "birth_place": {
            "type": "string",
            "title": "Birth Place"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "patronymic",
          "birth_date",
          "sex",
          "medical_group",
          "height",
          "weight",
          "email",
          "phone_number",
          "admission_year",
          "birth_place",
          "address",
          "group_id"
        ]
      },
      "StandardsOut": {
        "type": "object",
        "title": "StandardsOut",
        "properties": {
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StandardOut"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "count"
        ]
      },
      "StandardOut": {
        "type": "object",
        "title": "StandardOut",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "StandardsResultsOut": {
        "type": "object",
        "title": "StandardsResultsOut",
        "properties": {
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StandardResultOut"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "count"
        ]
      },
      "StandardResultOut": {
        "type": "object",
        "title": "StandardResultOut",
        "properties": {
          "result": {
            "type": "integer",
            "title": "Result"
          },
          "semester": {
            "type": "integer",
            "title": "Semester"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "standard_id": {
            "title": "Standard Id",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "standard": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Standard"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "result",
          "semester",
          "id"
        ]
      },
      "Standard": {
        "type": "object",
        "title": "Standard",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "name"
        ]
      },
      "StandardResultCreate": {
        "type": "object",
        "title": "StandardResultCreate",
        "properties": {
          "result": {
            "type": "integer",
            "title": "Result"
          },
          "semester": {
            "type": "integer",
            "title": "Semester"
          },
          "standard_id": {
            "type": "integer",
            "title": "Standard Id"
          }
        },
        "required": [
          "result",
          "semester",
          "standard_id"
        ]
      },
      "StandardResultUpdate": {
        "type": "object",
        "title": "StandardResultUpdate",
        "properties": {
          "result": {
            "type": "integer",
            "title": "Result"
          }
        },
        "required": [
          "result"
        ]
      },
      "TheoriesOut": {
        "type": "object",
        "title": "TheoriesOut",
        "properties": {
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TheoryOut"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "count"
        ]
      },
      "TheoryOut": {
        "type": "object",
        "title": "TheoryOut",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "TheoriesResultsOut": {
        "type": "object",
        "title": "TheoriesResultsOut",
        "properties": {
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TheoryResultOut"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "required": [
          "count"
        ]
      },
      "TheoryResultOut": {
        "type": "object",
        "title": "TheoryResultOut",
        "properties": {
          "scores": {
            "type": "integer",
            "title": "Scores"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "theory_id": {
            "title": "Theory Id",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "theory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Standard"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "scores",
          "id"
        ]
      },
      "TheoryResultCreate": {
        "type": "object",
        "title": "TheoryResultCreate",
        "properties": {
          "scores": {
            "type": "integer",
            "title": "Scores"
          },
          "student_id": {
            "type": "integer",
            "title": "Student Id"
          },
          "theory_id": {
            "type": "integer",
            "title": "Theory Id"
          }
        },
        "required": [
          "scores",
          "student_id",
          "theory_id"
        ]
      },
      "TheoryResultUpdate": {
        "type": "object",
        "title": "TheoryResultUpdate",
        "properties": {
          "scores": {
            "title": "Scores",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
